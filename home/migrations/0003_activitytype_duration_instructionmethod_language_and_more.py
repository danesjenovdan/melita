# Generated by Django 4.1.4 on 2023-01-09 18:11

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ("wagtaildocs", "0012_uploadeddocument"),
        ("taggit", "0005_auto_20220424_2025"),
        ("home", "0002_create_homepage"),
    ]

    operations = [
        migrations.CreateModel(
            name="ActivityType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "color",
                    models.CharField(
                        help_text="Any valid CSS color format (e.g. #fff, #ffffff, rgb(255, 255, 255), ...)",
                        max_length=30,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Duration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="InstructionMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=10)),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", wagtail.fields.RichTextField()),
                (
                    "prep_time",
                    models.IntegerField(
                        choices=[
                            (1, "*"),
                            (2, "**"),
                            (3, "***"),
                            (4, "****"),
                            (5, "*****"),
                        ]
                    ),
                ),
                ("goals", wagtail.fields.RichTextField()),
                (
                    "pedagogical_tips_and_recommendations",
                    wagtail.fields.RichTextField(),
                ),
                (
                    "duration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="home.duration"
                    ),
                ),
                (
                    "instruction_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="home.instructionmethod",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Material",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="ProgramType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "source_description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("source_url", models.URLField(blank=True, null=True)),
                (
                    "lesson",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sources",
                        to="home.lesson",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LessonTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="home.lesson",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="lesson",
            name="keywords",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="home.LessonTag",
                to="taggit.Tag",
                verbose_name="Keywords",
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="language",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="home.language"
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="lesson_file",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="wagtaildocs.document",
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="materials",
            field=modelcluster.fields.ParentalManyToManyField(
                blank=True, to="home.material"
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="program_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="home.programtype"
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="related_lessons",
            field=modelcluster.fields.ParentalManyToManyField(
                blank=True, to="home.lesson"
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="slides_file",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="wagtaildocs.document",
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="theme",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="home.theme"
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="worksheets_file",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="wagtaildocs.document",
            ),
        ),
        migrations.CreateModel(
            name="KeyTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("term", models.CharField(max_length=50)),
                ("definition", models.TextField()),
                (
                    "source_description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("source_url", models.URLField(blank=True, null=True)),
                (
                    "lesson",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="key_terms",
                        to="home.lesson",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FurtherReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "source_description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("source_url", models.URLField(blank=True, null=True)),
                (
                    "lesson",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="further_reading",
                        to="home.lesson",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("duration", models.CharField(max_length=100)),
                ("type", models.CharField(max_length=100)),
                ("description", models.CharField(max_length=200)),
                ("aim", models.CharField(max_length=100)),
                ("text", wagtail.fields.RichTextField()),
                (
                    "activity_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="home.activitytype",
                    ),
                ),
                (
                    "lesson",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="home.lesson",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
